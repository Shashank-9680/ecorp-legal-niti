{"version":3,"file":"component---src-pages-incometaxcalculator-js-edd2ad278d1013cfc0ec.js","mappings":"kJAuEA,UAlE4BA,KAC1B,MAAM,EAACC,EAAO,EAACC,IAAaC,EAAAA,EAAAA,UAAS,KAC/B,EAACC,EAAI,EAACC,IAAUF,EAAAA,EAAAA,UAAS,KAE/BG,EAAAA,EAAAA,YAAU,KACaC,MACnB,IAAIC,EAAgB,EACpB,MAAMC,EAAcC,WAAWT,GAG7BO,EADEC,GAAe,MACD,EACPA,GAAe,KACgB,KAAvBA,EAAc,OACtBA,GAAe,KACgB,MAAvBA,EAAc,MAAiB,KACvCA,GAAe,KACiB,KAAxBA,EAAc,MAAiB,MAEP,KAAxBA,EAAc,MAAiB,MAGlDJ,EAAOG,EAAcG,QAAQ,GAAG,EAGlCJ,EAAc,GACb,CAACN,IAKJ,OACEW,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAA,WAASE,UAAU,UACjBF,EAAAA,cAAA,OAAKE,UAAU,gBACbF,EAAAA,cAAA,OAAKE,UAAU,aACbF,EAAAA,cAAA,MAAIE,UAAU,cAAa,yBAC3BF,EAAAA,cAAA,KAAGE,UAAU,SAAQ,yFAIrBF,EAAAA,cAAA,OAAKE,UAAU,eACbF,EAAAA,cAAA,SAAOG,QAAQ,UAAS,UACxBH,EAAAA,cAAA,OAAKE,UAAU,iBACbF,EAAAA,cAAA,SACEI,KAAK,SACLC,MAAOhB,EACPiB,SAnBWC,IACzBjB,EAAUiB,EAAEC,OAAOH,MAAM,IAoBbL,EAAAA,cAAA,KAAGE,UAAU,iBAAgB,QAInCF,EAAAA,cAAA,OAAKE,UAAU,cACbF,EAAAA,cAAA,OAAKE,UAAU,mBACbF,EAAAA,cAAA,OAAKE,UAAU,gBACbF,EAAAA,cAAA,SAAG,OACHA,EAAAA,cAAA,SAAIR,QAMP,C","sources":["webpack://@-nerko/gatsby/./src/pages/incometaxcalculator.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport \"./style.css\"\r\nimport \"./it.css\"\r\nimport Layout from \"../layout/layout\"\r\n\r\nconst Incometaxcalculator = () => {\r\n  const [income, setIncome] = useState(\"\")\r\n  const [tax, setTax] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    const calculateTax = () => {\r\n      let calculatedTax = 0\r\n      const incomeValue = parseFloat(income)\r\n\r\n      if (incomeValue <= 18200) {\r\n        calculatedTax = 0\r\n      } else if (incomeValue <= 45000) {\r\n        calculatedTax = (incomeValue - 18200) * 0.19\r\n      } else if (incomeValue <= 120000) {\r\n        calculatedTax = (incomeValue - 45000) * 0.325 + 5092\r\n      } else if (incomeValue <= 180000) {\r\n        calculatedTax = (incomeValue - 120000) * 0.37 + 29467\r\n      } else {\r\n        calculatedTax = (incomeValue - 180000) * 0.45 + 51667\r\n      }\r\n\r\n      setTax(calculatedTax.toFixed(2))\r\n    }\r\n\r\n    calculateTax()\r\n  }, [income])\r\n\r\n  const handleIncomeChange = e => {\r\n    setIncome(e.target.value)\r\n  }\r\n  return (\r\n    <Layout>\r\n      <section className=\"it-box\">\r\n        <div className=\"it-container\">\r\n          <div className=\"left-side\">\r\n            <h4 className=\"it-heading\">Income Tax Calculator</h4>\r\n            <p className=\"para2\">\r\n              Plan your retirement in seconds with the retirement plan\r\n              calculator from Vakilsearch!\r\n            </p>\r\n            <div className=\"given-input\">\r\n              <label htmlFor=\"income\">Income</label>\r\n              <div className=\"user-input-rs\">\r\n                <input\r\n                  type=\"number\"\r\n                  value={income}\r\n                  onChange={handleIncomeChange}\r\n                />\r\n                <p className=\"ruppes-symbol\">â‚¹</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"right-side\">\r\n            <div className=\"right-container\">\r\n              <div className=\"selling-cost\">\r\n                <p>tax</p>\r\n                <p>{tax}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Incometaxcalculator\r\n"],"names":["Incometaxcalculator","income","setIncome","useState","tax","setTax","useEffect","calculateTax","calculatedTax","incomeValue","parseFloat","toFixed","React","Layout","className","htmlFor","type","value","onChange","e","target"],"sourceRoot":""}